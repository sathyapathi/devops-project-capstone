pipeline {
    agent any

    options {
        timeout(time: 30, unit: 'MINUTES')  // Pipeline timeout
    }

    // Environment Variables
    environment {
        GIT_REPO = "https://github.com/sathyapathi/devops-project-capstone.git"
        DOCKER_IMAGE = "sathyapathi/capstone-image:1.0"
        DOCKERFILE_NAME = "Dockerfile_capstone"
        DOCKER_CREDENTIALS = "docker-hub-credentials"
        DOCKER_AUTH_SCRIPT = "scripts/docker-auth.groovy"  // Path to reusable Docker authentication script
        INVENTORY_SERVERS_TEST = "Server_Inventory_Test.txt"
        ANSIBLE_PLAYBOOK_TEST = "ansible_playbook_configure-test-servers.yml"
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    echo "Cloning the repository..."
                    git branch: 'main', url: "${GIT_REPO}"
                }
            }
        }

        stage('Docker Authentication') {
            steps {
                script {
                    echo "Authenticating with DockerHub..."
                    def dockerAuth = load "${DOCKER_AUTH_SCRIPT}"  // Load reusable script
                    dockerAuth.dockerLogin(DOCKER_CREDENTIALS)  // Authenticate to DockerHub
                }
            }
        }
    }

    post {
        success {
            echo "Pipeline completed successfully!"
        }
        failure {
            echo "Pipeline failed. Please check the logs."
        }
    }
}
